services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /minio_data --console-address ":9001"
    volumes:
      - minio_data:/minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - my_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - my_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    environment:
      MONGODB_URI: ${MONGODB_URI}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
      MEDIA_URL: ${MINIO_ENDPOINT}
      NODE_ENV: ${NODE_ENV}
      WATCHPACK_POLLING: true
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - my_network

  redis:
    image: redislabs/redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - my_network

volumes:
  mongodb_data:
  minio_data:
  redis_data:

networks:
  my_network: